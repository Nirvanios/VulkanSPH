#version 450

#extension GL_EXT_debug_printf : enable

#define TO_INDEX(a, b, c) (int(a + simulationInfo.gridSize.x * (b + simulationInfo.gridSize.y * c)))
#define TO_INDEX_BOUNDARY(a, b, c)                                                                 \
  (int(a + (simulationInfo.gridSize.x + 2) * (b + (simulationInfo.gridSize.y + 2) * c)))

#define VEC_TO_INDEX(a) (TO_INDEX(a.x, a.y, a.z))
#define VEC_TO_INDEX_BOUNDARY(a) (TO_INDEX_BOUNDARY(a.x, a.y, a.z))

layout(push_constant) uniform GridSimulationInfoUniform {
  ivec4 gridSize;
  vec4 gridOrigin;
  float timeStep;
  int cellCount;
  float cellSize;
  float diffusionCoefficient;
  int boundaryScale;
  uint specificInfo;
}
simulationInfo;

layout(std430, binding = 0) buffer velocityBuffer { vec4 velocityField[]; };

layout(std430, binding = 1) buffer pressureBuffer { float pressureField[]; };

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

void main() {
  const ivec3 gridSizeWithBorders = simulationInfo.gridSize.xyz + ivec3(2);
  const ivec3 myId3D =
      ivec3(gl_GlobalInvocationID.x % simulationInfo.gridSize.x,
            int(gl_GlobalInvocationID.x % (simulationInfo.gridSize.x * simulationInfo.gridSize.y)
                / simulationInfo.gridSize.x),
            int(gl_GlobalInvocationID.x / (simulationInfo.gridSize.x * simulationInfo.gridSize.y)));
  const uint myId = (myId3D.x + 1) + (myId3D.y + 1) * gridSizeWithBorders.x
      + (myId3D.z + 1) * gridSizeWithBorders.x * gridSizeWithBorders.y;

  if (all(lessThan(myId3D, simulationInfo.gridSize.xyz))) {
    const vec3 h = 1.0 / vec3(simulationInfo.gridSize.xyz);
    const ivec3 myGridID3D = myId3D + ivec3(1);

    velocityField[myId].xyz -= 0.5 * simulationInfo.gridSize.xyz
        * vec3((pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D + ivec3(1, 0, 0)))]
                - pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D - ivec3(1, 0, 0)))]),//x
               (pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D + ivec3(0, 1, 0)))]
                - pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D - ivec3(0, 1, 0)))]),//y
               (pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D + ivec3(0, 0, 1)))]
                - pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D - ivec3(0, 0, 1)))]));//z
/*     if (myId == 31)
      debugPrintfEXT("myId: %d, up: %f, donw: %f", myId,
                     pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D + ivec3(0, 1, 0)))],
                     pressureField[VEC_TO_INDEX_BOUNDARY((myGridID3D - ivec3(0, 1, 0)))]); */

    //debugPrintfEXT("myId: %d, velocityField: %.3v4f", myId, velocityField[myId]);
  }
}